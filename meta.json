[
  {
    "id": "1",
    "name": "Clone Graph",
    "difficulty": "Medium",
    "companiesAsked": ["Amazon", "Google", "Netflix", "Square"],
    "question": [
      {
        "text": "There are a total of n courses you have to take labelled from 0 to n - 1.\nSome courses may have prerequisites, for example, if prerequisites[i] = [ai, bi] this means you must take the course bi before the course ai.\nGiven the total number of courses numCourses and a list of the prerequisite pairs, return the ordering of courses you should take to finish all courses.\nIf there are many valid answers, return any of them. If it is impossible to finish all courses, return an empty array."
      }
    ],
    "solutions": [
      {
        "name": "Brute Force",
        "files": ["clone-graph.py", "clone-graph.java"]
      },
      { "name": "Using DFS Approach", "files": ["course-schedule.py"] }
    ]
  },
  {
    "id": "2",
    "name": "Minimum Spanning Tree",
    "difficulty": "Easy",
    "companiesAsked": ["Amazon", "Facebook", "Netflix", "Pinterest"],
    "question": [
      {
        "text": "There are a total of n courses you have to take labelled from 0 to n - 1.\nSome courses may have prerequisites, for example, if prerequisites[i] = [ai, bi] this means you must take the course bi before the course ai.\nGiven the total number of courses numCourses and a list of the prerequisite pairs, return the ordering of courses you should take to finish all courses.\nIf there are many valid answers, return any of them. If it is impossible to finish all courses, return an empty array."
      }
    ],
    "solutions": [
      {
        "name": "Brute Force",
        "files": ["clone-graph.py", "clone-graph.java"]
      },
      { "name": "Using DFS Approach", "files": ["course-schedule.py"] }
    ]
  },
  {
    "id": "3",
    "name": "Maximim Sum Subarray",
    "difficulty": "Medium",
    "companiesAsked": ["Apple", "Google", "Netflix", "Uber", "Zoho"],
    "question": [
      {
        "text": "There are a total of n courses you have to take labelled from 0 to n - 1.\nSome courses may have prerequisites, for example, if prerequisites[i] = [ai, bi] this means you must take the course bi before the course ai.\nGiven the total number of courses numCourses and a list of the prerequisite pairs, return the ordering of courses you should take to finish all courses.\nIf there are many valid answers, return any of them. If it is impossible to finish all courses, return an empty array."
      }
    ],
    "solutions": [
      {
        "name": "Brute Force",
        "files": ["clone-graph.py", "clone-graph.java"]
      },
      { "name": "Using DFS Approach", "files": ["course-schedule.py"] }
    ]
  },
  {
    "id": "4",
    "name": "Maximim Product Subarray",
    "difficulty": "Hard",
    "companiesAsked": [
      "Amazon",
      "Apple",
      "Google",
      "Netflix",
      "Square",
      "PayTm"
    ],
    "question": [
      {
        "text": "There are a total of n courses you have to take labelled from 0 to n - 1.\nSome courses may have prerequisites, for example, if prerequisites[i] = [ai, bi] this means you must take the course bi before the course ai.\nGiven the total number of courses numCourses and a list of the prerequisite pairs, return the ordering of courses you should take to finish all courses.\nIf there are many valid answers, return any of them. If it is impossible to finish all courses, return an empty array."
      }
    ],
    "solutions": [
      {
        "name": "Brute Force",
        "files": ["clone-graph.py", "clone-graph.java"]
      },
      { "name": "Using DFS Approach", "files": ["course-schedule.py"] }
    ]
  },
  {
    "id": "5",
    "name": "Mirror Image of a Binary Tree",
    "difficulty": "Easy",
    "companiesAsked": ["Amazon", "Google", "Netflix", "Square"],
    "question": [
      {
        "text": "There are a total of n courses you have to take labelled from 0 to n - 1.\nSome courses may have prerequisites, for example, if prerequisites[i] = [ai, bi] this means you must take the course bi before the course ai.\nGiven the total number of courses numCourses and a list of the prerequisite pairs, return the ordering of courses you should take to finish all courses.\nIf there are many valid answers, return any of them. If it is impossible to finish all courses, return an empty array."
      }
    ],
    "solutions": [
      {
        "name": "Brute Force",
        "files": ["clone-graph.py", "clone-graph.java"]
      },
      { "name": "Using DFS Approach", "files": ["course-schedule.py"] }
    ]
  },
  {
    "id": "6",
    "name": "Loop of a Linked List",
    "difficulty": "Hard",
    "companiesAsked": ["Amazon", "Google", "Netflix", "Square"],
    "question": [
      {
        "text": "There are a total of n courses you have to take labelled from 0 to n - 1.\nSome courses may have prerequisites, for example, if prerequisites[i] = [ai, bi] this means you must take the course bi before the course ai.\nGiven the total number of courses numCourses and a list of the prerequisite pairs, return the ordering of courses you should take to finish all courses.\nIf there are many valid answers, return any of them. If it is impossible to finish all courses, return an empty array."
      }
    ],
    "solutions": [
      {
        "name": "Brute Force",
        "files": ["clone-graph.py", "clone-graph.java"]
      },
      { "name": "Using DFS Approach", "files": ["course-schedule.py"] }
    ]
  },
  {
    "id": "7",
    "name": "Largest Palindromic Substring",
    "difficulty": "Medium",
    "companiesAsked": ["Amazon", "Google", "Netflix", "Square"],
    "question": [
      {
        "text": "There are a total of n courses you have to take labelled from 0 to n - 1.\nSome courses may have prerequisites, for example, if prerequisites[i] = [ai, bi] this means you must take the course bi before the course ai.\nGiven the total number of courses numCourses and a list of the prerequisite pairs, return the ordering of courses you should take to finish all courses.\nIf there are many valid answers, return any of them. If it is impossible to finish all courses, return an empty array."
      }
    ],
    "solutions": [
      {
        "name": "Brute Force",
        "files": ["clone-graph.py", "clone-graph.java"]
      },
      { "name": "Using DFS Approach", "files": ["course-schedule.py"] }
    ]
  },
  {
    "id": "8",
    "name": "Clone Graph - II",
    "difficulty": "Medium",
    "companiesAsked": ["Amazon", "Google", "Netflix", "Square"],
    "question": [
      {
        "text": "There are a total of n courses you have to take labelled from 0 to n - 1.\nSome courses may have prerequisites, for example, if prerequisites[i] = [ai, bi] this means you must take the course bi before the course ai.\nGiven the total number of courses numCourses and a list of the prerequisite pairs, return the ordering of courses you should take to finish all courses.\nIf there are many valid answers, return any of them. If it is impossible to finish all courses, return an empty array."
      }
    ],
    "solutions": [
      {
        "name": "Brute Force",
        "files": ["clone-graph.py", "clone-graph.java"]
      },
      { "name": "Using DFS Approach", "files": ["course-schedule.py"] }
    ]
  },
  {
    "id": "9",
    "name": "Three Sum",
    "difficulty": "Easy",
    "companiesAsked": ["PayPal", "Yahoo", "Ola Cabs", "Instagram"],
    "question": [
      {
        "text": "There are a total of n courses you have to take labelled from 0 to n - 1.\nSome courses may have prerequisites, for example, if prerequisites[i] = [ai, bi] this means you must take the course bi before the course ai.\nGiven the total number of courses numCourses and a list of the prerequisite pairs, return the ordering of courses you should take to finish all courses.\nIf there are many valid answers, return any of them. If it is impossible to finish all courses, return an empty array."
      }
    ],
    "solutions": [
      {
        "name": "Brute Force",
        "files": ["clone-graph.py", "clone-graph.java"]
      },
      { "name": "Using DFS Approach", "files": ["course-schedule.py"] }
    ]
  },
  {
    "id": "10",
    "name": "Queu Using Stack",
    "difficulty": "Easy",
    "companiesAsked": ["Facebook", "Whatsapp", "Zomato"],
    "question": [
      {
        "text": "There are a total of n courses you have to take labelled from 0 to n - 1.\nSome courses may have prerequisites, for example, if prerequisites[i] = [ai, bi] this means you must take the course bi before the course ai.\nGiven the total number of courses numCourses and a list of the prerequisite pairs, return the ordering of courses you should take to finish all courses.\nIf there are many valid answers, return any of them. If it is impossible to finish all courses, return an empty array."
      }
    ],
    "solutions": [
      {
        "name": "Brute Force",
        "files": ["clone-graph.py", "clone-graph.java"]
      },
      { "name": "Using DFS Approach", "files": ["course-schedule.py"] }
    ]
  }
]
